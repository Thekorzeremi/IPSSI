import DataTypes = require('sequelize/lib/data-typesb/data-types');
import Deferrablesequelize/lib/deferrablesequelize/lib/deferrsequelize/lib/operatorsort Op from 'sequelize/lib/operasequelize/lib/query-types QueryTypes = require('sequelize/sequelize/lib/table-hintses');
import TableHints = requiresequelize/lib/index-hintsib/table-hints');
import Indsequelize/lib/utils = require('sequelizsequelize/lib/associations/index
import Utils = resequelize/lib/data-typeslize/lib/utils');
sequelize/lib/errors/index 'sequelize/lib/associations/index';
exsequelize/lib/errors/indexequelize/lib/data-sequelize/lib/model
export * from 'sesequelize/lib/dialects/abstract/query-interface BaseError as Errosequelize/lib/sequelizeequelize/lib/errorsequelize/lib/transactionort * from 'sequelize/lib/model';
sequelize/lib/utils* from 'sequelize/lib/dialectssequelize/lib/utils/validator-extrase';
export * from 'sequelize/lib/sequelize';
export * from 'sequelize/lib/transaction';
export { useInflection } from 'sequelize/lib/utils';
export { Validator } from 'sequelize/lib/utils/validator-extras';
export { Utils, QueryTypes, Op, TableHints, IndexHints, DataTypes, Deferrable };

/**
 * Type helper for making certain fields of an object optional. This is helpful
 * for creating the `CreationAttributes` from your `Attributes` for a Model.
 */
export type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
